doctype html
html

  head
    link(rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.4/css/bootstrap.min.css")
    link(rel="stylesheet" href="/style.css")

    //- @see https://github.com/Automattic/socket.io-client
    script(src="/socket.io/socket.io.js")




  body
    .container

      form(method="POST" action="/auth/logout" onsubmit="socket.disconnect()")
        button logout

      h1
        | Chat
        .label(data-status)

      div#chatarea
      div
        form(onsubmit="sendMessage();return false;")
          input(type="text" id="text" required="true")
          button(type="submit") Send

  script.
    var socket = io();

    function showStatus(status, message) {
      document.querySelector('[data-status]').innerHTML = message || status;
      document.querySelector('[data-status]').setAttribute('data-status', status);
    }

    function sendMessage(){
      var text = document.getElementById("text").value;
      socket.emit("client:sendMessage", text, function(){
        document.getElementById("text").value = '';
        document.getElementById("text").focus();
      });
    }

    var elem = document.getElementById('chatarea');



    socket.on('server:myMessageSended', function(data){
      elem.innerHTML += "<p><b>me</b>: " + data.text + "</p>";
      elem.scrollTop = elem.scrollHeight;
    });

    socket.on('server:messageSended', function(data){
      elem.innerHTML += "<p><b>" + data.name +"</b>: " + data.text + "</p>";
      elem.scrollTop = elem.scrollHeight;
    });

    socket.on('server:userEnter', function(data){
      elem.innerHTML += "<p>User <b>" + data.name +"</b> has joined</p>";
      elem.scrollTop = elem.scrollHeight;
    });

    socket.on('server:userLeft', function(data){
      elem.innerHTML += "<p>User <b>" + data.name +"</b> has left</p>";
      elem.scrollTop = elem.scrollHeight;
    });

    socket.on('error', function(message) {
            console.error(message);
            showStatus('error', message);
          });

    'connect disconnect reconnect reconnecting reconnect_failed'.split(' ').forEach(function(event) {
      socket.on(event, function() {
        showStatus(event);
      })
    });

    socket.on('logout', function(data) {
      socket.disconnect();
      alert("You logged out");
      window.location.reload();
    })
    socket.on('news', function(data) {
      console.log(data);
      socket.emit('my other event', {my: 'data'});
    });

